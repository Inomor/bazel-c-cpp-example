version: 2.1

orbs:
  win: circleci/windows@2.4.1

jobs:
  linux:
    docker:
      - image: ubuntu:rolling

    resource_class: large
    steps:
      - checkout

      - run:
          command: |
            apt-get update
            export DEBIAN_FRONTEND=noninteractive
            apt-get install -q -y curl build-essential zlib1g-dev patch
            curl -sSL https://github.com/bazelbuild/bazelisk/releases/download/v1.10.1/bazelisk-linux-amd64 >/usr/local/bin/bazel
            chmod +x /usr/local/bin/bazel

      - run:
          command: |
            ./exercise.sh

  windows:
    executor:
      name: win/default
      shell: powershell.exe
      size: large
    steps:
      - checkout

      - run:
          shell: cmd.exe
          command: |
            curl -sSL https://github.com/bazelbuild/bazel/releases/download/5.1.1/bazel-5.1.1-windows-x86_64.exe >/ProgramData/nvm/bazel.exe

      - run:
          command: |
            $ErrorActionPreference = "Stop"

            bazel build '...'
            if ($LastExitCode -ne 0) {throw "Failed"}

            bazel test //speller/greeting:greeting-test
            if ($LastExitCode -ne 0) {throw "Failed"}

            bazel test --test_output=errors '...'
            if ($LastExitCode -ne 0) {throw "Failed"}

            bazel test '...' --test_verbose_timeout_warnings
            if ($LastExitCode -ne 0) {throw "Failed"}

            bazel run //speller/main:build-dictionary
            if ($LastExitCode -ne 0) {throw "Failed"}

            echo TODO translate exercise.sh to Powershell
            bazel query --notool_deps --noimplicit_deps "deps(//speller/main)" --output graph
            if ($LastExitCode -ne 0) {throw "Failed"}

workflows:
  version: 2
  both_platforms:
    jobs:
      - linux
      - windows
